#pragma once
#ifndef RANDOMUNIQUE_H_
#define RANDOMUNIQUE_H_
/**********************************************************
* 《Data Structures and Algorithm Analysis in C++ Fourth Edition》 第二章课后习题2.8
* 生产前N个整数的一个随机排序，随机数必须唯一，且对于[1,N]的每一个数均有一个唯一的随机数
* 例如{4,,,3,1,5,2}合法，{5，4，1，2，1}非法
* 假设存在随机数生成器
* 有三个算法
* 1.数组a，n个元素。从a[0]开始填入随机数。为填入a[i],生成随机数直到它不同于a[0] - a[i-1]是再填入a[i]
* 2.同算法1，新增一个数组used。当一个随机数ran放入数组a时，置used[ran]=true.使用used[ran]测试该随机数是否已使用
* 3.填写数组a[i]=i+1。然后 for(i = 1; i < n; ++i) swap(a[i], a[randInt(0, i)])
**********************************************************/

/****************************************************************************************
* a.证明算法正确
* b.算法运行时间分析，上限大O表示
* c.实现和测试
*****************************************************************************************/

void RandomUnique1(int *arr, int num);

void RandomUnique2(int *arr, int num);

void RandomUnique3(int *arr, int num);

#endif
