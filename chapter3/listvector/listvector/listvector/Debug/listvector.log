  main.cpp
  正在生成代码...
  正在编译...
  usestack.cpp
e:\git\dsaa\chapter3\listvector\listvector\listvector\zystack.h(89): warning C4018: “<”: 有符号/无符号不匹配
  e:\git\dsaa\chapter3\listvector\listvector\listvector\zystack.h(87): note: 编译 类 模板 成员函数 "void zy::stack<char>::push(const char &)" 时
  e:\git\dsaa\chapter3\listvector\listvector\listvector\usestack.cpp(17): note: 参见对正在编译的函数 模板 实例化“void zy::stack<char>::push(const char &)”的引用
  e:\git\dsaa\chapter3\listvector\listvector\listvector\usestack.cpp(7): note: 参见对正在编译的 类 模板 实例化 "zy::stack<char>" 的引用
  test.cpp
d:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.10.25017\include\memory(53): warning C4996: 'std::uninitialized_copy::_Unchecked_iterators::_Deprecate': Call to 'std::uninitialized_copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  d:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.10.25017\include\memory(53): note: 参见“std::uninitialized_copy::_Unchecked_iterators::_Deprecate”的声明
  e:\git\dsaa\chapter3\listvector\listvector\listvector\zyvector.h(50): note: 参见对正在编译的函数 模板 实例化“_FwdIt *std::uninitialized_copy<const _Elem*,std::basic_string<char,std::char_traits<char>,std::allocator<char>>*>(_InIt,_InIt,_FwdIt)”的引用
          with
          [
              _FwdIt=std::basic_string<char,std::char_traits<char>,std::allocator<char>> *,
              _Elem=std::basic_string<char,std::char_traits<char>,std::allocator<char>>,
              _InIt=const std::basic_string<char,std::char_traits<char>,std::allocator<char>> *
          ]
  e:\git\dsaa\chapter3\listvector\listvector\listvector\zyvector.h(46): note: 编译 类 模板 成员函数 "zy::zyvector<std::string>::zyvector(const std::initializer_list<std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &)" 时
  e:\git\dsaa\chapter3\listvector\listvector\listvector\test.cpp(57): note: 参见对正在编译的函数 模板 实例化“zy::zyvector<std::string>::zyvector(const std::initializer_list<std::basic_string<char,std::char_traits<char>,std::allocator<char>>> &)”的引用
  e:\git\dsaa\chapter3\listvector\listvector\listvector\test.cpp(57): note: 参见对正在编译的 类 模板 实例化 "zy::zyvector<std::string>" 的引用
  postfixnotation.cpp
e:\git\dsaa\chapter3\listvector\listvector\listvector\zystack.h(102): warning C4018: “<”: 有符号/无符号不匹配
  e:\git\dsaa\chapter3\listvector\listvector\listvector\zystack.h(100): note: 编译 类 模板 成员函数 "void zy::stack<int>::push(int &&)" 时
  e:\git\dsaa\chapter3\listvector\listvector\listvector\postfixnotation.cpp(148): note: 参见对正在编译的函数 模板 实例化“void zy::stack<int>::push(int &&)”的引用
  e:\git\dsaa\chapter3\listvector\listvector\listvector\postfixnotation.cpp(48): note: 参见对正在编译的 类 模板 实例化 "zy::stack<int>" 的引用
e:\git\dsaa\chapter3\listvector\listvector\listvector\zystack.h(89): warning C4018: “<”: 有符号/无符号不匹配
  e:\git\dsaa\chapter3\listvector\listvector\listvector\zystack.h(87): note: 编译 类 模板 成员函数 "void zy::stack<int>::push(const int &)" 时
  e:\git\dsaa\chapter3\listvector\listvector\listvector\postfixnotation.cpp(65): note: 参见对正在编译的函数 模板 实例化“void zy::stack<int>::push(const int &)”的引用
  正在生成代码...
  listvector.vcxproj -> E:\GIT\dsaa\chapter3\listvector\listvector\Debug\listvector.exe
  listvector.vcxproj -> E:\GIT\dsaa\chapter3\listvector\listvector\Debug\listvector.pdb (Partial PDB)
